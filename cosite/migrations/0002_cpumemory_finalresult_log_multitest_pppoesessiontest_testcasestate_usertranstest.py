# -*- coding: utf-8 -*-
# Generated by Django 1.11 on 2017-05-26 03:29
from __future__ import unicode_literals

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('cosite', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='CPUMemory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('task_id', models.UUIDField(help_text='测试用例ID')),
                ('cpu', models.FloatField(default='-1', help_text='CPU利用率')),
                ('memory', models.FloatField(default='-1', help_text='Memory利用率')),
                ('add_time', models.IntegerField(default='-1', help_text='添加时间')),
            ],
        ),
        migrations.CreateModel(
            name='FinalResult',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('task_id', models.UUIDField(help_text='测试用例ID')),
                ('final_result', models.CharField(default='NULL', help_text='是否通过', max_length=10)),
                ('add_time', models.IntegerField(default='-1', help_text='添加时间')),
            ],
        ),
        migrations.CreateModel(
            name='Log',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('task_id', models.UUIDField(help_text='测试用例ID')),
                ('log', models.CharField(default='NULL', help_text='日志', max_length=10240000)),
                ('add_time', models.IntegerField(default='-1', help_text='添加时间')),
            ],
        ),
        migrations.CreateModel(
            name='MultiTest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('task_id', models.UUIDField(help_text='测试用例ID')),
                ('iptv_min_latency', models.FloatField(default='-1', help_text='IPTV最小时延')),
                ('iptv_max_latency', models.FloatField(default='-1', help_text='IPTV最大时延')),
                ('iptv_avg_latency', models.FloatField(default='-1', help_text='IPTV平均时延')),
                ('voice_min_latency', models.FloatField(default='-1', help_text='VOICE最小时延')),
                ('voice_max_latency', models.FloatField(default='-1', help_text='VOICE最大时延')),
                ('voice_avg_latency', models.FloatField(default='-1', help_text='VOICE平均时延')),
                ('pppoe_min_latency', models.FloatField(default='-1', help_text='PPPoE最小时延')),
                ('pppoe_max_latency', models.FloatField(default='-1', help_text='PPPoE最大时延')),
                ('pppoe_avg_latency', models.FloatField(default='-1', help_text='PPPoE平均时延')),
                ('ipoe_min_latency', models.FloatField(default='-1', help_text='IPoE最小时延')),
                ('ipoe_max_latency', models.FloatField(default='-1', help_text='IPoE最大时延')),
                ('ipoe_avg_latency', models.FloatField(default='-1', help_text='IPoE平均时延')),
                ('add_time', models.IntegerField(default='-1', help_text='添加时间')),
            ],
        ),
        migrations.CreateModel(
            name='PPPoESessionTest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('task_id', models.UUIDField(help_text='测试用例ID')),
                ('session_num', models.IntegerField(default='-1', help_text='Session连接数')),
                ('add_time', models.IntegerField(default='-1', help_text='添加时间')),
            ],
        ),
        migrations.CreateModel(
            name='TestCaseState',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('task_id', models.UUIDField(help_text='测试用例ID')),
                ('set_flow', models.CharField(default='-1', help_text='测试流量', max_length=100)),
                ('set_session', models.IntegerField(default='-1', help_text='测试Session数')),
                ('add_time', models.IntegerField(default='-1', help_text='添加时间')),
                ('current_state', models.BooleanField(default=False, help_text='当前状态')),
            ],
        ),
        migrations.CreateModel(
            name='UserTransTest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('task_id', models.UUIDField(help_text='测试用例ID')),
                ('frame_size', models.IntegerField(default='-1', help_text='帧大小')),
                ('min_latency', models.FloatField(default='-1', help_text='最小时延')),
                ('max_latency', models.FloatField(default='-1', help_text='最大时延')),
                ('avg_latency', models.FloatField(default='-1', help_text='平均时延')),
                ('add_time', models.IntegerField(default='-1', help_text='添加时间')),
            ],
        ),
    ]
